‎'use client'
‎import { useState } from 'react'
‎import { useRouter } from 'next/navigation'
‎import Link from 'next/link'
‎
‎export default function SignUp() {
‎  const [formData, setFormData] = useState({
‎    name: '',
‎    email: '',
‎    password: '',
‎    confirmPassword: '',
‎    role: 'employee',
‎    shop: ''
‎  })
‎  const [showPassword, setShowPassword] = useState(false)
‎  const [error, setError] = useState('')
‎  const [success, setSuccess] = useState(false)
‎  const router = useRouter()
‎
‎  const handleChange = (e) => {
‎    const { name, value } = e.target
‎    setFormData(prev => ({ ...prev, [name]: value }))
‎  }
‎
‎  const handleSubmit = (e) => {
‎    e.preventDefault()
‎    setError('')
‎    
‎    // Validation
‎    if (!formData.name || !formData.email || !formData.password) {
‎      setError('All fields are required')
‎      return
‎    }
‎    
‎    if (formData.password !== formData.confirmPassword) {
‎      setError('Passwords do not match')
‎      return
‎    }
‎    
‎    if (formData.role === 'employee' && !formData.shop) {
‎      setError('Please select a shop')
‎      return
‎    }
‎
‎    // Save user data
‎    const users = JSON.parse(localStorage.getItem('users')) || []
‎    if (users.some(user => user.email === formData.email)) {
‎      setError('Email already exists')
‎      return
‎    }
‎
‎    const newUser = {
‎      ...formData,
‎      id: Date.now(),
‎      verified: formData.role === 'admin',
‎      createdAt: new Date().toISOString(),
‎      lastLogin: null
‎    }
‎    delete newUser.confirmPassword
‎
‎    localStorage.setItem('users', JSON.stringify([...users, newUser]))
‎    setSuccess(true)
‎    setTimeout(() => router.push('/login'), 1500)
‎  }
‎
‎  return (
‎    <div className="max-w-md mx-auto p-6 bg-white rounded-lg shadow-md mt-10">
‎      <h1 className="text-2xl font-bold mb-6 text-center">Create Account</h1>
‎      {error && <p className="text-red-500 mb-4 text-center">{error}</p>}
‎      {success && <p className="text-green-500 mb-4 text-center">Account created successfully! Redirecting...</p>}
‎      
‎      <form onSubmit={handleSubmit} className="space-y-4">
‎        <div>
‎          <label className="block text-sm font-medium mb-1">Full Name</label>
‎          <input
‎            type="text"
‎            name="name"
‎            value={formData.name}
‎            onChange={handleChange}
‎            className="w-full px-3 py-2 border rounded"
‎            required
‎          />
‎        </div>
‎        
‎        <div>
‎          <label className="block text-sm font-medium mb-1">Email</label>
‎          <input
‎            type="email"
‎            name="email"
‎            value={formData.email}
‎            onChange={handleChange}
‎            className="w-full px-3 py-2 border rounded"
‎            required
‎          />
‎        </div>
‎        
‎        <div>
‎          <label className="block text-sm font-medium mb-1">Password</label>
‎          <div className="relative">
‎            <input
‎              type={showPassword ? "text" : "password"}
‎              name="password"
‎              value={formData.password}
‎              onChange={handleChange}
‎              className="w-full px-3 py-2 border rounded"
‎              required
‎            />
‎            <button
‎              type="button"
‎              onClick={() => setShowPassword(!showPassword)}
‎              className="absolute right-2 top-2 text-sm text-gray-600"
‎            >
‎              {showPassword ? 'Hide' : 'Show'}
‎            </button>
‎          </div>
‎        </div>
‎        
‎        <div>
‎          <label className="block text-sm font-medium mb-1">Confirm Password</label>
‎          <div className="relative">
‎            <input
‎              type={showPassword ? "text" : "password"}
‎              name="confirmPassword"
‎              value={formData.confirmPassword}
‎              onChange={handleChange}
‎              className="w-full px-3 py-2 border rounded"
‎              required
‎            />
‎            <button
‎              type="button"
‎              onClick={() => setShowPassword(!showPassword)}
‎              className="absolute right-2 top-2 text-sm text-gray-600"
‎            >
‎              {showPassword ? 'Hide' : 'Show'}
‎            </button>
‎          </div>
‎        </div>
‎        
‎        <div>
‎          <label className="block text-sm font-medium mb-1">Role</label>
‎          <select
‎            name="role"
‎            value={formData.role}
‎            onChange={handleChange}
‎            className="w-full px-3 py-2 border rounded"
‎          >
‎            <option value="employee">Employee</option>
‎            <option value="admin">Admin</option>
‎          </select>
‎        </div>
‎        
‎        {formData.role === 'employee' && (
‎          <div>
‎            <label className="block text-sm font-medium mb-1">Shop</label>
‎            <select
‎              name="shop"
‎              value={formData.shop}
‎              onChange={handleChange}
‎              className="w-full px-3 py-2 border rounded"
‎              required
‎            >
‎              <option value="">Select Shop</option>
‎              <option value="boutique">Boutique Shop</option>
‎              <option value="decoration">House Decoration Shop</option>
‎            </select>
‎          </div>
‎        )}
‎        
‎        <button
‎          type="submit"
‎          className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition"
‎        >
‎          Sign Up
‎        </button>
‎        
‎        <p className="text-center text-sm text-gray-600">
‎          Already have an account? <Link href="/login" className="text-blue-600 hover:underline">Login</Link>
‎        </p>
‎      </form>
‎    </div>
‎  )
‎}
‎
